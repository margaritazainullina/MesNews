package mesnews;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.List;
import mesnews.dao.AuteurDao;
import mesnews.dao.PhotoDao;
import mesnews.model.Auteur;
import mesnews.model.Photo;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.BeforeClass;

/**
 *
 * @author Margarita
 */
public class PhotoDaoTest {

    static List<Photo> photos;
    static Photo testPhoto;

    public PhotoDaoTest() {
    }

    @BeforeClass
    public static void setUp() throws MalformedURLException {
        //create test entry
        testPhoto = new Photo(0, ".jpg", 600, 800, true, "Some photo", LocalDate.now(), new HashSet<Auteur>(), new URL("http://123.com"), null);
        //read all entrues to collection
        photos = PhotoDao.listPhotos();
    }

    @Test
    public void CRUDPhotoTest() {
        //save to db
        PhotoDao.savePhoto(testPhoto);
        //update autogenerated id
        int id = PhotoDao.listPhotos().get(PhotoDao.listPhotos().size() - 1).getId();
        testPhoto.setId(id);
        //save to collection
        photos.add(testPhoto);

        //read from db and collection and compare
        assertEquals(testPhoto, PhotoDao.readPhoto(testPhoto.getId()));
        //list from db and collection and compare
        assertEquals(photos, PhotoDao.listPhotos());

        //update entry
        testPhoto.setHauteur(700);
        testPhoto.setLargeur(1024);
        HashSet<Auteur> allAuteurs = new HashSet<>();
        allAuteurs.addAll(AuteurDao.listAuteurs());
        testPhoto.setAuteurs(allAuteurs);
        //update in collection
        photos.set(photos.size() - 1, testPhoto);
        //update in db
        PhotoDao.updatePhoto(testPhoto);

        //read from db and collection and compare
        assertEquals(testPhoto, PhotoDao.readPhoto(testPhoto.getId()));
        //list from db and collection and compare
        assertEquals(photos, PhotoDao.listPhotos());

        //delete in collection
        photos.remove(testPhoto);
        //update in db
        PhotoDao.deletePhoto(testPhoto);

        //list from db and collection and compare
        assertEquals(photos, PhotoDao.listPhotos());
    }
}
